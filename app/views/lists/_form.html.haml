.col-sm-12
  %h2.text-default List options

  = simple_form_for(@list, html: { class: 'form-horizontal' }, wrapper: :horizontal_form) do |f|
    %fieldset
      %legend Subject prefixes
      = f.input :subject_prefix, hint: "If you want brackets, add them here, too."
      = f.input :subject_prefix_in, label: 'Subject-prefix for incoming emails', hint: "If you want brackets, add them here, too."
      = f.input :subject_prefix_out, label: 'Subject-prefix for outgoing emails', hint: "If you want brackets, add them here, too."

    %fieldset
      %legend Footer
      = f.input :public_footer, as: :text
      = f.input :internal_footer, as: :text

    %fieldset
      %legend Message control
      = checkbox f, :keep_msgid, "Pass incoming Message-IDs to outgoing messages? This enables threading in Mail-clients and helps to identify messages."
      = checkbox f, :munge_from, "Include the original sender's email address into the From header of outgoing messages? If this is enabled recipients can see who sent the email before decrypting the content. Some people like that, but be aware that this puts information into the open which otherwise might have been hidden (depending on the encryption of the messages)."
      = checkbox f, :set_reply_to_to_sender, "Set a Reply-To header to outgoing messages, which contains the originally incoming Reply-To value, or the incoming From value? If this is enabled replies will by default be sent to this email address instead of to the list. PLEASE BEWARE: this might result in ACCIDENTALLY REVEALED EMAIL ADDRESSES of subscribers even to non-subscribers!"
      = f.input :max_message_size_kb, hint: "Emails bigger than this will be rejected (measured in kilo-bytes.)"
      = f.input :headers_to_meta, hint: "One header-name per line. Case-insensitive.", as: :text

    %fieldset
      %legend Send control
      = checkbox f, :send_encrypted_only, "Only send messages if they can be encrypted to the subscribed receiver (does not apply to resend messages)."
      = checkbox f, :deliver_selfsent, "Should e-mails be delivered to the original subscribed sender? (Works only with signed emails.)"

    %fieldset
      %legend Receive control
      = checkbox f, :receive_admin_only, "Only accept messages validly signed by an admin of this list? (Determined by fingerprint.)"
      = checkbox f, :receive_authenticated_only, "Only accept messages that are validly signed by a subscriber? (Determined by fingerprint.)"
      = checkbox f, :receive_signed_only, "Only accept validly signed messages?"
      = checkbox f, :receive_encrypted_only, "Only accept encrypted messages?"
      = checkbox f, :receive_from_subscribed_emailaddresses_only, "Only accept messages with a subscribed address as From-header? (Warning: this is a very weak check!)"

    %fieldset
      %legend Keyword control
      = f.input :keywords_admin_only, as: :check_boxes, collection: @keywords, hint: "Selected keywords may only be called by admins of this list.", wrapper: :horizontal_radio_and_checkboxes
      = f.input :keywords_admin_notify, as: :check_boxes, collection: @keywords, hint: "Admins will be notified whenever one of these keywords is called.", wrapper: :horizontal_radio_and_checkboxes


    %fieldset
      %legend Advanced: Message headers
      = checkbox f, :include_list_headers, "Include List-headers (RFC 2369) to outgoing messages."
      = checkbox f, :include_openpgp_header, "Include OpenPGP-headers to outgoing messages."
      = f.input :openpgp_header_preference, collection: %w[signencrypt encrypt sign], hint: "Only relevant if inclusion of OpenPGP-headers is active."
    %fieldset
      %legend Advanced: Bounce handling
      = f.input :bounces_drop_on_headers, placeholder: 'X-Spam-Flag: yes', hint: 'One match per line. Case-insensitive.', as: :text
      = checkbox f, :bounces_drop_all, "Don't bounce but drop all rejected messages."
      = checkbox f, :bounces_notify_admins, "Notify admins of bounced messages."
    %fieldset
      %legend Advanced: Other settings
      = f.input :log_level, collection: %w[error warn info debug]

    %fieldset
      %legend Submit
      = f.button :submit, 'Update', class: 'btn btn-primary'


